First Phone Contact Comments
--------------------------------------------------------
Hi

Please proivde me the output of the following form stnadby side:

Please mount the database and provide me spool output of the following;


spool MYDBINFO

SET PAGESIZE 20000
SET LINESIZE 1000
SET TRIMSPOOL ON
SET PAUSE OFF
SET SERVEROUTPUT ON
SET FEEDBACK ON
SET ECHO ON
SET NUMFORMAT 999999999999999
COL TABLESPACE_NAME FORMAT A50
COL FILE_NAME FORMAT A50
COL NAME FORMAT A50
COL MEMBER FORMAT A50
col DFILE_CHKP_CHANGE format a40
col DFILE_HED_CHKP_CHANGE format a40
ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-YYYY HH24:MI:SS';


ARCHIVE LOG LIST;

SELECT * FROM v$instance;
SELECT * FROM v$recover_file;
SELECT * FROM v$recovery_log;
select distinct status from v$backup;
select distinct(status) from v$datafile; 
select distinct (to_char(checkpoint_change#)) from v$datafile;
select distinct (to_char(checkpoint_change#)) from v$datafile_header;


select error, fuzzy, status, checkpoint_change#, to_char(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as checkpoint_time,
count(*) from v$datafile_header group by error, fuzzy, status, checkpoint_change#, checkpoint_time
order by checkpoint_change#, checkpoint_time;

select resetlogs_change#, resetlogs_time, error, fuzzy, status, recover, checkpoint_change#, checkpoint_time, count(*) from v$datafile_header
group by fuzzy, status, error, recover, checkpoint_change#, checkpoint_time, resetlogs_change#, resetlogs_time
order by fuzzy, status, error, recover, checkpoint_change#, checkpoint_time ;


select min(FHSCN) "LOW FILEHDR SCN", max(FHSCN) "MAX FILEHDR SCN", max(FHAFS) "Min PITR ABSSCN" from X$KCVFH ;

select max(to_number(fhafs)) "Minimum PITR SCN" from x$kcvfh ;

select * from v$backup;

SELECT dbid, 
name, 
TO_CHAR(created, 'DD-MON-YYYY HH24:MI:SS') created, 
open_mode, 
log_mode, 
TO_CHAR(checkpoint_change#, '999999999999999') as checkpoint_change#, 
controlfile_type, 
TO_CHAR(controlfile_change#, '999999999999999') as controlfile_change#,
TO_CHAR(controlfile_time, 'DD-MON-YYYY HH24:MI:SS') controlfile_time, 
TO_CHAR(resetlogs_change#, '999999999999999') as resetlogs_change#, 
TO_CHAR(resetlogs_time, 'DD-MON-YYYY HH24:MI:SS') resetlogs_time
FROM v$database;



SELECT f.name, b.status, b.change#, b.time
FROM v$backup b,
v$datafile f
WHERE b.file# = f.file#
AND b.status = 'ACTIVE';

SELECT name,
file#, 
status, 
enabled, 
creation_change#, 
TO_CHAR(creation_time, 'DD-MON-YYYY HH24:MI:SS') as creation_time, 
TO_CHAR(checkpoint_change#, '999999999999999') as checkpoint_change#, 
TO_CHAR(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as checkpoint_time, 
TO_CHAR(offline_change#, '999999999999999') as offline_change#, 
TO_CHAR(online_change#, '999999999999999') as online_change#, 
TO_CHAR(online_time, 'DD-MON-YYYY HH24:MI:SS') as online_time, 
TO_CHAR(bytes, '9,999,999,999,990') as bytes
FROM v$datafile
where status <> 'ONLINE'
OR checkpoint_change# <> (SELECT checkpoint_change# FROM v$database);

SELECT name, 
file#, 
status, 
error, 
creation_change#, 
TO_CHAR(creation_time, 'DD-MON-YYYY HH24:MI:SS') as creation_time, 
TO_CHAR(checkpoint_change#, '999999999999999') as checkpoint_change#, 
TO_CHAR(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as checkpoint_time, 
TO_CHAR(resetlogs_change#, '999999999999999') as resetlogs_change#, 
TO_CHAR(resetlogs_time, 'DD-MON-YYYY HH24:MI:SS') as resetlogs_time, 
TO_CHAR(bytes, '9,999,999,999,990') as bytes
FROM v$datafile_header
WHERE status <> 'ONLINE'
OR checkpoint_change# <> (SELECT checkpoint_change# FROM v$database);

SELECT status, 
checkpoint_change#,
TO_CHAR(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as checkpoint_time,
count(*)
FROM v$datafile_header
GROUP BY status, checkpoint_change#, checkpoint_time
ORDER BY status, checkpoint_change#, checkpoint_time;

SELECT dd.FILE#, 
dd.NAME, 
dd.STATUS, 
to_char(dd.checkpoint_change#,'999999999999999') dfile_chkp_change, 
to_char(dh.checkpoint_change#,'999999999999999') dfile_hed_chkp_change, 
dh.recover, 
dh.fuzzy
FROM v$datafile dd,
v$datafile_header dh
WHERE dd.FILE#=dh.FILE#;

SELECT name file_name,
recover,
fuzzy,
checkpoint_change#
FROM v$datafile_header
ORDER BY checkpoint_change#;

SELECT hxfil file_num, 
hxfnm file_name, 
fhtyp type, 
hxerr validity, 
fhscn scn, 
fhtnm tablespace_name, 
fhsta status , 
fhrba_seq sequence
FROM x$kcvfh;


SELECT r.FILE# AS df#, d.NAME AS df_name, t.NAME AS tbsp_name,
d.STATUS, r.ERROR, r.CHANGE#, r.TIME
FROM V$RECOVER_FILE r, V$DATAFILE d, V$TABLESPACE t
WHERE t.TS# = d.TS#
AND d.FILE# = r.FILE#;

SELECT group#, 
thread#, 
sequence#, 
members,
archived,
status,
TO_CHAR(first_change#, '999999999999999') as first_change#
FROM v$log;

SELECT group#,
member
FROM v$logfile;

select v1.thread#, v1.group#, member, sequence#, first_change#, archived, v1.status from v$log v1, v$logfile v2 where v1.group#=v2.group#;

SELECT a.recid, 
a.thread#, 
a.sequence#, 
a.name, 
a.archived, 
a.deleted, 
TO_DATE(a.completion_time, 'DD-MON-YYYY HH24:MI:SS') as completed
FROM v$archived_log a, v$log l
WHERE a.thread# = l.thread#
AND a.sequence# = l.sequence#;

SELECT sequence#, 
thread#, 
first_change#, 
next_change# 
FROM v$backup_redolog
ORDER BY sequence#;

SELECT thread#,
sequence#,
name,
first_change#,
next_change#
FROM v$archived_log;

SELECT V1.GROUP#, MEMBER, SEQUENCE#, FIRST_CHANGE#
FROM V$LOG V1, V$LOGFILE V2 WHERE V1.GROUP# = V2.GROUP# ;

select file#, name fro v$datafile;


select substr(name,1,40), recover, fuzzy, checkpoint_change# from v$datafile_header order by checkpoint_change#;

COL DF# FORMAT 999
COL DF_NAME FORMAT A35
COL TBSP_NAME FORMAT A7
COL STATUS FORMAT A7
COL ERROR FORMAT A10
COL CHANGE# FORMAT 99999999
SELECT r.FILE# AS df#, d.NAME AS df_name, t.NAME AS tbsp_name, d.STATUS, r.ERROR, r.CHANGE#, r.TIME
FROM V$RECOVER_FILE r, V$DATAFILE d, V$TABLESPACE t WHERE t.TS# = d.TS# AND d.FILE# = r.FILE#;

select hxfil FILENUMBER,fhsta STATUS,fhscn SCN,fhrba_Seq SEQUENCE,fhtnm TABLESPACE from x$kcvfh;

select status, checkpoint_change#,to_char(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as checkpoint_time,count(*)
from v$datafile_header group by status, checkpoint_change#, checkpoint_time order by status, checkpoint_change#, checkpoint_time;


show parameter corrupt
show parameter rollback
show parameter undo
select status, checkpoint_change#, to_char(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as checkpoint_time,count(*)
from v$datafile_header group by status, checkpoint_change#, checkpoint_time
order by status, checkpoint_change#, checkpoint_time;

select ADDR, XIDUSN, XIDSLOT, XIDSQN, 
UBAFIL, UBABLK, UBASQN,
START_UBAFIL, START_UBABLK, START_UBASQN, 
USED_UBLK, STATUS
from v$transaction;


select a.recid, a.thread#, a.sequence#, a.name, a.archived, a.deleted,
to_date(a.completion_time, 'DD-MON-YYYY HH24:MI:SS') as completed
from v$archived_log a, v$log l
where a.thread# = l.thread#
and a.sequence# = l.sequence#;

select sequence#, thread#, first_change#, next_change# from v$backup_redolog;


SELECT r.FILE# AS df#, d.NAME AS df_name, t.NAME AS tbsp_name, 
d.STATUS, r.ERROR, r.CHANGE#, r.TIME
FROM V$RECOVER_FILE r, V$DATAFILE d, V$TABLESPACE t
WHERE t.TS# = d.TS#
AND d.FILE# = r.FILE#;


select * 
from X$KCCLH, (select min(checkpoint_change#) df_min_scn, 
min(checkpoint_change#) df_max_scn
from v$datafile_header 
where status='ONLINE') df
where LHLOS in (select first_change# from v$log)
or df.df_min_scn between LHLOS and LHNXS
or df.df_max_scn between LHLOS and LHNXS;
select * from v$backup where status = 'ACTIVE';
select ADDR, XIDUSN, XIDSLOT, XIDSQN, 
UBAFIL, UBABLK, UBASQN,
START_UBAFIL, START_UBABLK, START_UBASQN, 
USED_UBLK, STATUS
from v$transaction;
select * from v$archive_gap;
select * from v$recovery_file_dest;
select * from v$flash_recovery_area_usage;
select * from v$backup_corruption;
select * from v$copy_corruption;
select * from v$database_block_corruption;
select * from v$database_incarnation;
select * from v$rman_configuration;
select s.recid as bs_key, p.recid as bp_key, p.status, p.tag, p.device_type,
p.handle, p.media, p.completion_time, p.bytes
from v$backup_piece p, v$backup_set s
where p.set_stamp = s.set_stamp
and s.controlfile_included='YES'
order by p.completion_time;
select s.recid as bs_key, p.recid as bp_key, p.status, p.tag, p.device_type,
p.handle, p.media, p.completion_time, p.bytes
from v$backup_datafile f, v$backup_piece p, v$backup_set s
where p.set_stamp = s.set_stamp
and f.set_stamp = s.set_stamp
and p.handle is not null
and f.file# = 1
order by p.completion_time;



select status, checkpoint_change#, to_char(checkpoint_time, 'DD-MON-YYYY HH24:MI:SS') as 
checkpoint_time, count(*) from v$datafile_header group by status, checkpoint_change#, checkpoint_time order by status, checkpoint_change#, checkpoint_time;

select hxfil FILENUMBER,fhsta STATUS,fhscn SCN,fhrba_Seq SEQUENCE,fhtnm 
TABLESPACE from x$kcvfh;

select hxfil FILENUMBER,fhsta STATUS,fhscn SCN,fhrba_Seq SEQUENCE from x$kcvfh order by 4;


SPOOL OFF;



-Upload the above spool output.


From rman I need the following:


Please set the NLS_DATE_FORMAT environment variable before executing rman
setenv NLS_DATE_FORMAT 'DD-MM-YYYY HH24:MI:SS'
or
NLS_DATE_FORMAT='DD-MM-YYYY HH24:MI:SS'


rman target / log=mylog
set echo on;
show all;
report schema;
list incarnation;
list backup;
exit

upload mylog file
